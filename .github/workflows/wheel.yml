name: Build python-ldap wheels for Windows

on:
  workflow_dispatch:

env:
  OPENSSL_VER: openssl-3.4.0
  OPENLDAP_VER: openldap-2.4.59
  PYTHONLDAP_VER: python-ldap-3.4.4
  CIBW_TEST_COMMAND: python -c"import ldap;print(ldap.__version__)"
  MSBUILDTREATHIGHERTOOLSVERSIONASCURRENT: 1

jobs:
  build_amd64:
    name: Build AMD64 wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
        python:
          - cp310
          - cp311
          - cp312
          - cp313
    env:
      VS_PLATFORM: x64
      OPENSSL_CONFIG: VC-WIN64A-masm
    steps:
      - uses: actions/checkout@v4
      - uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64
      - run: build_openssl.cmd
        shell: cmd
      - run: build_openldap.cmd
        shell: cmd
      - run: build_python-ldap.cmd
        shell: cmd
      - uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_ARCHS: AMD64
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.os }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.python }}-${{ matrix.os }}-wheel
          path: ./wheelhouse/*.whl
  build_x86:
    name: Build x86 wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
        python:
          - cp310
          - cp311
          - cp312
          - cp313
    env:
      VS_PLATFORM: Win32
      OPENSSL_CONFIG: VC-WIN32
    steps:
      - uses: actions/checkout@v4
      - uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x86
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_x86
      - uses: ilammy/setup-nasm@v1
      - run: build_openssl.cmd
        shell: cmd
      - run: build_openldap.cmd
        shell: cmd
      - run: build_python-ldap.cmd
        shell: cmd
      - uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_ARCHS: x86
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.os }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.python }}-${{ matrix.os }}-wheel
          path: ./wheelhouse/*.whl
  upload_assets:
    name: Upload release assets
    runs-on: ubuntu-latest
    needs:
      - build_amd64
      - build_x86
    steps:
      - name: Generate release name
        id: release-name
        run: printf 'RELEASE_NAME=%s\n' "$(date +%Y%m%d-%H%M%S)" >"GITHUB_OUTPUT"
      - name: Fetch assets
        id: fetch-assets
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: Upload release assets
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          name: ${{ steps.release-name.outputs.RELEASE_NAME }}
          tag: main
          artifacts: ${{ steps.fetch-assets.outputs.download-path }}/*.whl
